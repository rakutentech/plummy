buildscript {
    ext.kotlin_version = '1.3.50'
    repositories { jcenter() }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
    }
}

plugins {
    id 'application'
    id 'pl.allegro.tech.build.axion-release' version '1.10.2'
    id 'com.github.breadmoirai.github-release' version "2.2.9"
}

apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.12.0"
    implementation 'com.github.stathissideris:ditaa:v0.11.0' // Ditaa needs to come first to override plantuml
    implementation "net.sourceforge.plantuml:plantuml:1.2019.9"
    implementation "io.undertow:undertow-core:2.0.26.Final"
    implementation 'com.github.ajalt:clikt:2.1.0'
}

scmVersion {
    repository {
        directory = project.rootProject.file('../')
    }
    tag {
        prefix = 'v'
        versionSeparator = ''
    }
}

group 'com.rakuten'
project.version = scmVersion.version

// Only build shadow (fat) jar, not lean jar and distribution archives
[jar, distTar, distZip, shadowDistTar, shadowDistZip].each { it.enabled = false }

shadowJar {
    archiveFileName.set("${project.name}-${project.version}.jar")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

mainClassName = "Main"

githubRelease {
    token "${System.getenv("GITHUB_TOKEN")}"
    owner "rakutentech" 
    repo  "plummy"
    releaseAssets shadowJar.getArchiveFile().get().getAsFile()
}

tasks.withType(com.github.breadmoirai.githubreleaseplugin.GithubReleaseTask) {
    dependsOn build
}

